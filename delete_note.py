#Создаем пустой список
new_titi = []
#Создаем цикл для постоянного сбора данных с условиями
while True:
    user_name = input("Введите имя: ")
    content = input("Введите заголовок заметки: ")
    titels = input("Введите описание заметки: ")
    status = input("Введите статус заметки: ")
    new_data = input("Дата создания заметки: ")
    dead_line = input("Дедлайн заметки: ")

    user_titel = {
        "Имя": user_name,
        "Заголовок": content,
        "Описание": titels,
        "Статус": status,
        "Дата создания": new_data,
        "Дедлайн": dead_line
    }

    new_titi.append(user_titel)

  # Спрашиваем пользователя, хочет ли он создать еще одну заметку
    titel = input("Создать еще одну заметку? (Да/Нет): ")
    if titel.lower() != "да":  # Преобразуем ввод в нижний регистр для удобства
        break  # Выход из цикла, если пользователь ввел что-то кроме "да"

#Создаем функцию которая будет нам выводить корректно информацию
def show_notes():
    print("\nСписок заметок:")
    for user in new_titi:
        print(f"\nИмя: {user['Имя']}, \nЗаголовок: {user['Заголовок']}, \nОписание: {user['Описание']}, \nСтатус: {user['Статус']}, \nДата создания: {user['Дата создания']}, \nДедлайн: {user['Дедлайн']}")


#Создаем цикл с исловиями и обрашемся к нашей функции
while True:
    show_notes()

    criteria = input("\nВведите имя или заголовок для удаления заметки (или 'выход' для завершения): ")
    if criteria.lower() == "выход":
        print("Программа завершена.")
        break
#Блок кода для поиски имени и заголовка заметки для удаления
    found = False
    for user in new_titi[:]:
        if criteria.lower() == user["Имя"].lower() or criteria.lower() == user["Заголовок"].lower():

            new_titi.remove(user)
            print(f"Заметка '{user['Заголовок']}' удалена")
            found = True
            break
#Выход из цикла если пользователь ввел не существующую заметку или имя
    if not found:
        print(f"Заметок с именем или заголовком'{criteria}' не найдено.")